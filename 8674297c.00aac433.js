(window.webpackJsonp=window.webpackJsonp||[]).push([[200],{327:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(1),i=n(9),o=(n(0),n(489)),r={id:"custom-navigators",title:"Custom navigators",sidebar_label:"Custom navigators"},c={id:"version-1.x/custom-navigators",title:"Custom navigators",description:"A navigator is any React component that has a [router](https://github.com/react-navigation/react-navigation/blob/1.x/src/routers/StackRouter.js) on it. Here is a basic one, which uses the [router's API](/docs/routers) to get the active component to render:",source:"@site/versioned_docs/version-1.x/custom-navigators.md",permalink:"/docs/1.x/custom-navigators",editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/source/versioned_docs/version-1.x/custom-navigators.md",version:"1.x",sidebar_label:"Custom navigators",sidebar:"version-1.x/docs",previous:{title:"Routers",permalink:"/docs/1.x/routers"},next:{title:"Custom routers",permalink:"/docs/1.x/custom-routers"}},s=[{value:"Navigation Prop",id:"navigation-prop",children:[{value:"Navigation State",id:"navigation-state",children:[]},{value:"Navigation Dispatchers",id:"navigation-dispatchers",children:[]}]},{value:"API for building custom navigators",id:"api-for-building-custom-navigators",children:[{value:"<code>createNavigator</code>",id:"createnavigator",children:[]},{value:"<code>addNavigationHelpers</code>",id:"addnavigationhelpers",children:[]},{value:"<code>createNavigationContainer</code>",id:"createnavigationcontainer",children:[]}]}],p={rightToc:s};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A navigator is any React component that has a ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/react-navigation/react-navigation/blob/1.x/src/routers/StackRouter.js"}),"router")," on it. Here is a basic one, which uses the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/routers"}),"router's API")," to get the active component to render:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"class MyNavigator extends React.Component {\n  static router = MyRouter;\n  render() {\n    const { state, dispatch, addListener } = this.props.navigation;\n    const { routes, index } = state;\n\n    // Figure out what to render based on the navigation state and the router:\n    const Component = MyRouter.getComponentForState(state);\n\n    // The state of the active child screen can be found at routes[index]\n    let childNavigation = { dispatch, addListener, state: routes[index] };\n    // If we want, we can also tinker with the dispatch function here, to limit\n    // or augment our children's actions\n    // addListener is needed to support children Stack and Drawer navigators\n\n    // Assuming our children want the convenience of calling .navigate() and so on,\n    // we should call addNavigationHelpers to augment our navigation prop:\n    childNavigation = addNavigationHelpers(childNavigation);\n\n    return <Component navigation={childNavigation} />;\n  }\n}\n")),Object(o.b)("h2",{id:"navigation-prop"},"Navigation Prop"),Object(o.b)("p",null,"The navigation prop passed down to a navigator only includes ",Object(o.b)("inlineCode",{parentName:"p"},"state")," and ",Object(o.b)("inlineCode",{parentName:"p"},"dispatch"),". This is the current state of the navigator, and an event channel to send action requests."),Object(o.b)("p",null,"All navigators are controlled components: they always display what is coming in through ",Object(o.b)("inlineCode",{parentName:"p"},"props.navigation.state"),", and their only way to change the state is to send actions into ",Object(o.b)("inlineCode",{parentName:"p"},"props.navigation.dispatch"),"."),Object(o.b)("p",null,"Navigators can specify custom behavior to parent navigators by ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/custom-routers/"}),"customizing their router"),". For example, a navigator is able to specify when actions should be blocked by returning null from ",Object(o.b)("inlineCode",{parentName:"p"},"router.getStateForAction"),". Or a navigator can specify custom URI handling by overriding ",Object(o.b)("inlineCode",{parentName:"p"},"router.getActionForPathAndParams")," to output a relevant navigation action, and handling that action in ",Object(o.b)("inlineCode",{parentName:"p"},"router.getStateForAction"),"."),Object(o.b)("h3",{id:"navigation-state"},"Navigation State"),Object(o.b)("p",null,"The navigation state that is passed into a navigator's ",Object(o.b)("inlineCode",{parentName:"p"},"props.navigation.state")," has the following structure:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"{\n  index: 1, // identifies which route in the routes array is active\n  routes: [\n    {\n      // Each route needs a name, which routers will use to associate each route\n      // with a react component\n      routeName: 'MyRouteName',\n\n      // A unique id for this route, used to keep order in the routes array:\n      key: 'myroute-123',\n\n      // Routes can have any additional data. The included routers have `params`\n      ...customRouteData,\n    },\n    ...moreRoutes,\n  ]\n}\n")),Object(o.b)("h3",{id:"navigation-dispatchers"},"Navigation Dispatchers"),Object(o.b)("p",null,"A navigator can dispatch navigation actions, such as 'Go to a URI', 'Go back'."),Object(o.b)("p",null,"The dispatcher will return ",Object(o.b)("inlineCode",{parentName:"p"},"true")," if the action was successfully handled, otherwise ",Object(o.b)("inlineCode",{parentName:"p"},"false"),"."),Object(o.b)("h2",{id:"api-for-building-custom-navigators"},"API for building custom navigators"),Object(o.b)("p",null,"To help developers implement custom navigators, the following utilities are provided with React Navigation:"),Object(o.b)("h3",{id:"createnavigator"},Object(o.b)("inlineCode",{parentName:"h3"},"createNavigator")),Object(o.b)("p",null,"This utility combines a ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/routers/"}),"router")," and a ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/navigation-views/"}),"navigation view")," together in a standard way:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const MyApp = createNavigator(MyRouter)(MyView);\n")),Object(o.b)("p",null,"All this does behind the scenes is:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const MyApp = ({ navigation }) => (\n  <MyView router={MyRouter} navigation={navigation} />\n);\nMyApp.router = MyRouter;\n")),Object(o.b)("h3",{id:"addnavigationhelpers"},Object(o.b)("inlineCode",{parentName:"h3"},"addNavigationHelpers")),Object(o.b)("p",null,"Takes in a bare navigator navigation prop with ",Object(o.b)("inlineCode",{parentName:"p"},"state")," and ",Object(o.b)("inlineCode",{parentName:"p"},"dispatch"),", and augments it with all the various functions in a screen navigation prop, such as ",Object(o.b)("inlineCode",{parentName:"p"},"navigation.navigate()")," and ",Object(o.b)("inlineCode",{parentName:"p"},"navigation.goBack()"),". These functions are simply helpers to create the actions and send them into ",Object(o.b)("inlineCode",{parentName:"p"},"dispatch"),"."),Object(o.b)("h3",{id:"createnavigationcontainer"},Object(o.b)("inlineCode",{parentName:"h3"},"createNavigationContainer")),Object(o.b)("p",null,"If you want your navigator to be usable as a top-level component, (without a navigation prop being passed in), you can use ",Object(o.b)("inlineCode",{parentName:"p"},"createNavigationContainer"),". This utility will make your navigator act like a top-level navigator when the navigation prop is missing. It will manage the app state, and integrate with app-level nav features, like handling incoming and outgoing links, and Android back button behavior."))}u.isMDXComponent=!0},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return g}));var a=n(0),i=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),u=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},l=function(e){var t=u(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=u(n),b=a,g=l["".concat(r,".").concat(b)]||l[b]||d[b]||o;return n?i.a.createElement(g,c({ref:t},p,{components:n})):i.a.createElement(g,c({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,r[1]=c;for(var p=2;p<o;p++)r[p]=n[p];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);