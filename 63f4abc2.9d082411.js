(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{269:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var a=n(1),r=n(9),o=(n(0),n(489)),i={id:"handling-iphonex",title:"iPhone X support",sidebar_label:"iPhone X support"},c={id:"version-2.x/handling-iphonex",title:"iPhone X support",description:'By default, React Navigation aids in ensuring your application displays correctly on the iPhoneX. It does so by using `SafeAreaView` inside of UI elements that may interact with the sensor cluster ("the notch") or the home activity indicator.',source:"@site/versioned_docs/version-2.x/handling-iphonex.md",permalink:"/docs/2.x/handling-iphonex",editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/source/versioned_docs/version-2.x/handling-iphonex.md",version:"2.x",sidebar_label:"iPhone X support",sidebar:"version-2.x-docs",previous:{title:"Authentication flows",permalink:"/docs/2.x/auth-flow"},next:{title:"Different status bar configuration based on route",permalink:"/docs/2.x/status-bar"}},s=[{value:"Hidden/Custom Navigation Bar or Tab Bar",id:"hiddencustom-navigation-bar-or-tab-bar",children:[]},{value:"Landscape Mode",id:"landscape-mode",children:[]},{value:"Use <code>forceInset</code> to get more control",id:"use-forceinset-to-get-more-control",children:[]}],p={rightToc:s};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"By default, React Navigation aids in ensuring your application displays correctly on the iPhoneX. It does so by using ",Object(o.b)("inlineCode",{parentName:"p"},"SafeAreaView"),' inside of UI elements that may interact with the sensor cluster ("the notch") or the home activity indicator.'),Object(o.b)("h2",{id:"hiddencustom-navigation-bar-or-tab-bar"},"Hidden/Custom Navigation Bar or Tab Bar"),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"/assets/iphoneX/01-iphonex-default.png",alt:"Default React Navigation Behavior"}))),Object(o.b)("p",null,"However, if you're overriding the default navigation bar, it's important to ensure your UI doesn't interfere with either of those hardware elements."),Object(o.b)("p",null,"For example, if I render nothing for the ",Object(o.b)("inlineCode",{parentName:"p"},"header")," or ",Object(o.b)("inlineCode",{parentName:"p"},"tabBarComponent"),", nothing renders"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"const Tabs = createBottomTabNavigator({\n  ...\n}, {\n  tabBarComponent: () => null,\n});\n\nexport default createStackNavigator({\n  ...\n}, {\n  headerMode: 'none',\n});\n")),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"/assets/iphoneX/02-iphonex-content-hidden.png",alt:"Text hidden by iPhoneX UI elements"}))),Object(o.b)("p",null,"To fix this issue you can wrap your content in a ",Object(o.b)("inlineCode",{parentName:"p"},"SafeAreaView"),", which can be imported from ",Object(o.b)("inlineCode",{parentName:"p"},"react-navigation"),". Note that ",Object(o.b)("inlineCode",{parentName:"p"},"SafeAreaView")," should not wrap entire navigators, just the screen components or any content in them."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { SafeAreaView } from 'react-navigation';\n\nclass MyHomeScreen extends Component {\n  render() {\n    return (\n      <SafeAreaView style={styles.container}>\n        <Text style={styles.paragraph}>\n          This is top text.\n        </Text>\n        <Text style={styles.paragraph}>\n          This is bottom text.\n        </Text>\n      </SafeAreaView>\n    );\n  }\n}\n")),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"/assets/iphoneX/03-iphonex-content-fixed.png",alt:"Content spaced correctly with SafeAreaView"}))),Object(o.b)("p",null,"This will detect if the app is running on an iPhoneX and, if so, ensure the content isn't hidden behind any hardware elements."),Object(o.b)("h2",{id:"landscape-mode"},"Landscape Mode"),Object(o.b)("p",null,"Even if you're using the default navigation bar and tab bar if your application works in landscape mode it's important to ensure you content isn't hidden behind the sensor cluster."),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"/assets/iphoneX/04-iphonex-landscape-hidden.png",alt:"App in landscape mode with text hidden"}))),Object(o.b)("p",null,"To fix this you can, once again, wrap your content in a ",Object(o.b)("inlineCode",{parentName:"p"},"SafeAreaView"),". This will not conflict with the navigation bar or tab bar's default behavior in portrait mode."),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"/assets/iphoneX/05-iphonex-landscape-fixed.png",alt:"App in landscape mode with text visible"}))),Object(o.b)("p",null,"In conclusion, use the ",Object(o.b)("inlineCode",{parentName:"p"},"SafeAreaView")," component on the screens you register with a React Navigation navigator."),Object(o.b)("p",null,"A ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://snack.expo.io/BJ6-M8pEG"}),"Snack")," is available with the code used in this overview."),Object(o.b)("h2",{id:"use-forceinset-to-get-more-control"},"Use ",Object(o.b)("inlineCode",{parentName:"h2"},"forceInset")," to get more control"),Object(o.b)("p",null,"In some cases you might need more control over which paddings are applied. For example, you can remove bottom padding by passing ",Object(o.b)("inlineCode",{parentName:"p"},"forceInset")," prop to ",Object(o.b)("inlineCode",{parentName:"p"},"SafeAreaView"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"<SafeAreaView style={styles.container} forceInset={{ bottom: 'never' }}>\n  <Text style={styles.paragraph}>\n    This is top text.\n  </Text>\n  <Text style={styles.paragraph}>\n    This is bottom text.\n  </Text>\n</SafeAreaView>\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"forceInset")," takes an object with the keys ",Object(o.b)("inlineCode",{parentName:"p"},"top | bottom | left | right | vertical | horizontal")," and the values ",Object(o.b)("inlineCode",{parentName:"p"},"'always' | 'never'"),". Or you can override the padding altogether by passing an integer."),Object(o.b)("p",null,"There is also a ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://snack.expo.io/@jozan/react-navigation-docs:-safeareaview-demo"}),"Snack")," available to demonstrate how ",Object(o.b)("inlineCode",{parentName:"p"},"forceInset")," behaves."))}l.isMDXComponent=!0},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),l=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},b=function(e){var t=l(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),b=l(n),u=a,h=b["".concat(i,".").concat(u)]||b[u]||d[u]||o;return n?r.a.createElement(h,c({ref:t},p,{components:n})):r.a.createElement(h,c({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);